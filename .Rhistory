geom_line() +
facet_wrap(~cate_l1, ncol=3, nrow=4) +
coord_cartesian(ylim = c(0,0.2)) +
xlab("") +
scale_y_continuous(labels  = percent)
dev.off()
png(paste0(basedir,"img\\plot_date_hour_category.png"),width=1000)
ggplot(DF_date_hour_category, aes(x=datetime, y=prop)) +
geom_point(aes(x=datetime, y=prop, color=weekday)) +
geom_line() +
facet_wrap(~cate_l1, ncol=5, nrow=5) +
coord_cartesian(ylim = c(0,0.2)) +
xlab("") +
scale_y_continuous(labels  = percent)
# ggplot(DF1, aes(x=datetime, colour=isweekend, fill=isweekend)) +
#     geom_histogram(binwidth=1800) +
#     facet_grid(cate_l1~.)
dev.off()
png(paste0(basedir,"img\\plot_date_hour_category.png"),width=1000)
ggplot(DF_date_hour_category, aes(x=datetime, y=prop)) +
geom_point(aes(x=datetime, y=prop, color=weekday)) +
geom_line() +
facet_wrap(~cate_l1, ncol=2, nrow=5) +
coord_cartesian(ylim = c(0,0.2)) +
xlab("") +
scale_y_continuous(labels  = percent)
# ggplot(DF1, aes(x=datetime, colour=isweekend, fill=isweekend)) +
#     geom_histogram(binwidth=1800) +
#     facet_grid(cate_l1~.)
dev.off()
png(paste0(basedir,"img\\plot_mean_hour_category.png"),width = 1000)
ggplot(DF_hour_category, aes(x=hour,y=prop)) +
geom_bar(stat="identity") +
xlab("") +
facet_wrap(~cate_l1, ncol=2, nrow=5) +
coord_cartesian(ylim = c(0,0.13)) +
scale_y_continuous(labels  = percent)
dev.off()
png(paste0(basedir,"img\\plot_mean_hour_category.png"),width = 1000)
ggplot(DF_hour_category, aes(x=hour,y=prop)) +
geom_bar(stat="identity") +
xlab("") +
facet_wrap(~cate_l1, ncol=5, nrow=2) +
coord_cartesian(ylim = c(0,0.13)) +
scale_y_continuous(labels  = percent)
dev.off()
source("fun\\GenerateStatsDataFrame.R")
DF_date_hour = gen_df_by_date_hour(DF1)
## plot
png(paste0(basedir,"img\\plot_date_hour.png"),width=1000)
ggplot(DF_date_hour, aes(x=datetime, y=prop)) +
geom_point(aes(x=datetime, y=prop, color=weekday)) +
geom_line() +
xlab("") +
scale_y_continuous(labels  = percent)
dev.off()
DF_date_hour_category = data.frame()
temp = lapply(L_category, function(i){
df = gen_df_by_date_hour(i, category = i[1,"cate_l1"])
DF_date_hour_category <<- rbind(DF_date_hour_category,df)
})
rm(temp, L_category)
## plot
png(paste0(basedir,"img\\plot_date_hour_category.png"),width=1000)
ggplot(DF_date_hour_category, aes(x=datetime, y=prop)) +
geom_point(aes(x=datetime, y=prop, color=weekday)) +
geom_line() +
facet_wrap(~cate_l1, ncol=2, nrow=5) +
coord_cartesian(ylim = c(0,0.2)) +
xlab("") +
scale_y_continuous(labels  = percent)
# ggplot(DF1, aes(x=datetime, colour=isweekend, fill=isweekend)) +
#     geom_histogram(binwidth=1800) +
#     facet_grid(cate_l1~.)
dev.off()
DF_date_hour_category = data.frame()
temp = lapply(L_category, function(i){
df = gen_df_by_date_hour(i, category = i[1,"cate_l1"])
DF_date_hour_category <<- rbind(DF_date_hour_category,df)
})
rm(temp, L_category)
L_category = split(DF1, DF1$cate_l1)
DF_date_hour_category = data.frame()
temp = lapply(L_category, function(i){
df = gen_df_by_date_hour(i, category = i[1,"cate_l1"])
DF_date_hour_category <<- rbind(DF_date_hour_category,df)
})
rm(temp)
png(paste0(basedir,"img\\plot_date_hour_category.png"),width=1000)
ggplot(DF_date_hour_category, aes(x=datetime, y=prop)) +
geom_point(aes(x=datetime, y=prop, color=weekday)) +
geom_line() +
facet_wrap(~cate_l1, ncol=2, nrow=5) +
coord_cartesian(ylim = c(0,0.2)) +
xlab("") +
scale_y_continuous(labels  = percent)
# ggplot(DF1, aes(x=datetime, colour=isweekend, fill=isweekend)) +
#     geom_histogram(binwidth=1800) +
#     facet_grid(cate_l1~.)
dev.off()
View(DF_date_hour)
View(DF_date_hour_category)
L_mean = split(DF_hour_category, DF_hour_category$cate_l1)
L_date = split(DF_date_hour_category, DF_date_hour_category$cate_l1)
DF_diff = data.frame()
temp = lapply(seq_along(L_mean), function(i){
mean_cate_i = L_mean[[i]]
date_cate_i = L_date[[i]]
for (j in 1:nrow(date_cate_i)){
idx= which(mean_df$hour == date_cate_i[j,"hour"])
diff = date_cate_i[j,"prop"]) - mean[idx, "prop"]
date_cate_i[j,"difference"] = diff
}
DF_diff <<- rbind(DF_diff, date_cate_i)
})
temp = lapply(seq_along(L_mean), function(i){
mean_cate_i = L_mean[[i]]
date_cate_i = L_date[[i]]
for (j in 1:nrow(date_cate_i)){
idx= which(mean_df$hour == date_cate_i[j,"hour"])
diff = date_cate_i[j,"prop"] - mean[idx, "prop"]
date_cate_i[j,"difference"] = diff
}
DF_diff <<- rbind(DF_diff, date_cate_i)
})
temp = lapply(seq_along(L_mean), function(i){
mean_cate_i = L_mean[[i]]
date_cate_i = L_date[[i]]
for (j in 1:nrow(date_cate_i)){
idx= which(mean_cate_i$hour == date_cate_i[j,"hour"])
diff = date_cate_i[j,"prop"] - mean_cate_i[idx, "prop"]
date_cate_i[j,"difference"] = diff
}
DF_diff <<- rbind(DF_diff, date_cate_i)
})
png(paste0(basedir,"img\\plot_diff.png"),width=1000)
ggplot(DF_date_hour_category, aes(x=datetime, y=difference)) +
geom_point(aes(x=datetime, y=difference, color=weekday)) +
geom_line() +
facet_wrap(~cate_l1, ncol=2, nrow=5) +
coord_cartesian(ylim = c(0,0.2)) +
xlab("") +
scale_y_continuous(labels  = percent)
# ggplot(DF1, aes(x=datetime, colour=isweekend, fill=isweekend)) +
#     geom_histogram(binwidth=1800) +
#     facet_grid(cate_l1~.)
dev.off()
png(paste0(basedir,"img\\plot_diff.png"),width=1000)
ggplot(DF_diff, aes(x=datetime, y=difference)) +
geom_point(aes(x=datetime, y=difference, color=weekday)) +
geom_line() +
facet_wrap(~cate_l1, ncol=2, nrow=5) +
coord_cartesian(ylim = c(0,0.2)) +
xlab("") +
scale_y_continuous(labels  = percent)
# ggplot(DF1, aes(x=datetime, colour=isweekend, fill=isweekend)) +
#     geom_histogram(binwidth=1800) +
#     facet_grid(cate_l1~.)
dev.off()
View(DF_diff)
Df2 = read.csv( paste0(basedir, "data\\weatherdata.csv"),
header=TRUE, sep=",",
colClasses = c("DateTime","numeric","character","numeric",
"character","numeric")
)
Df2 = read.csv( paste0(basedir, "data\\weatherdata.csv"),
header=TRUE, sep=",",
colClasses = c("character","numeric","character","numeric",
"character","numeric")
)
DF2$datetime = strptime( DF2$LocalTime,
format="%Y/%m/%d %H:%M"
)
View(Df2)
View(Df2)
DF2 = read.csv( paste0(basedir, "data\\weatherdata.csv"),
header=TRUE, sep=",",
colClasses = c("character","numeric","character","numeric",
"character","numeric")
)
DF2$datetime = strptime( DF2$LocalTime,
format="%Y/%m/%d %H:%M"
)
rm(Df2)
View(DF2)
View(DF_date_hour_category)
View(DF2)
rm(temp)
png(paste0(basedir,"img\\plot_windSp.png"),width=1000)
ggplot(DF_diff, aes(x=datetime, y=WindSpd.Te)) +
geom_line() +
xlab("")
dev.off()
png(paste0(basedir,"img\\plot_windSp.png"),width=1000)
ggplot(DF2, aes(x=datetime, y=WindSpd.Te)) +
geom_line() +
xlab("")
dev.off()
ggplot(DF2, aes(x=datetime, y=WindSpd.Te)) +
geom_line()
ggplot(DF_diff, aes(x=datetime, y=WindSpd.Te)) +
geom_point(aes(x=datetime, y=WindSpd.Te)) +
geom_line() +
xlab("")
ggplot(DF_diff, aes(x=datetime, y=WindSpd.Te)) +
geom_point(aes(x=datetime, y=WindSpd.Te)) +
#geom_line() +
xlab("")
ggplot(DF2, aes(x=datetime, y=WindSpd.Te)) +
geom_point(aes(x=datetime, y=WindSpd.Te)) +
#geom_line() +
xlab("")
?read.csv
DF2 = read.csv( paste0(basedir, "data\\weatherdata.csv"),
header=TRUE, sep=",",
colClasses = c("character","numeric","character","numeric",
"character","numeric"),
na.strings = "-9999"
)
DF2 = read.csv( paste0(basedir, "data\\weatherdata.csv"),
header=TRUE, sep=",",
colClasses = c("character","numeric","character","numeric",
"character","numeric"),
na.strings = "-9999.0"
)
DF2 = read.csv( paste0(basedir, "data\\weatherdata.csv"),
header=TRUE, sep=",",
colClasses = c("character","numeric","character","numeric",
"character","character"),
na.strings = "-9999.0"
)
View(DF2)
DF2 = read.csv( paste0(basedir, "data\\weatherdata.csv"),
header=TRUE, sep=",",
colClasses = c("character","numeric","character","numeric",
"character","numeric"),
na.strings = "-9999"
)
View(DF2)
DF2$datetime = strptime( DF2$LocalTime,
format="%Y/%m/%d %H:%M"
)
ggplot(DF2, aes(x=datetime, y=WindSpd.Te)) +
geom_point(aes(x=datetime, y=WindSpd.Te)) +
#geom_line() +
xlab("")
?ggplot
ggplot(DF2, aes(x=datetime, y=WindSpd.Te)) +
geom_point(aes(x=datetime, y=WindSpd.Te)) +
geom_line() +
xlab("")
View(DF2)
DF2 = read.csv( paste0(basedir, "data\\weatherdata.csv"),
header=TRUE, sep=",", nrows=309,
colClasses = c("character","numeric","character","numeric",
"character","numeric"),
na.strings = "-9999"
)
DF2$datetime = strptime( DF2$LocalTime,
format="%Y/%m/%d %H:%M"
)
png(paste0(basedir,"img\\plot_windSp.png"),width=1000)
ggplot(DF2, aes(x=datetime, y=WindSpd.Te)) +
geom_point(aes(x=datetime, y=WindSpd.Te)) +
geom_line() +
xlab("")
dev.off()
View(DF2)
DF2 = read.csv( paste0(basedir, "data\\weatherdata.csv"),
header=TRUE, sep=",", nrows=308,
colClasses = c("character","numeric","character","numeric",
"character","numeric"),
na.strings = "-9999"
)
DF2$datetime = strptime( DF2$LocalTime,
format="%Y/%m/%d %H:%M"
)
png(paste0(basedir,"img\\plot_windSp.png"),width=1000)
ggplot(DF2, aes(x=datetime, y=WindSpd.Te)) +
geom_point(aes(x=datetime, y=WindSpd.Te)) +
geom_line() +
xlab("")
dev.off()
png(paste0(basedir,"img\\plot_diff.png"),width=2000)
ggplot(DF_diff, aes(x=datetime, y=difference)) +
geom_point(aes(x=datetime, y=difference, color=weekday)) +
geom_line() +
facet_wrap(~cate_l1, ncol=2, nrow=5) +
coord_cartesian(ylim = c(0,0.2)) +
xlab("") +
scale_y_continuous(labels  = percent)
dev.off()
################
## load weather data
DF2 = read.csv( paste0(basedir, "data\\weatherdata.csv"),
header=TRUE, sep=",", nrows=308,
colClasses = c("character","numeric","character","numeric",
"character","numeric"),
na.strings = "-9999"
)
DF2$datetime = strptime( DF2$LocalTime,
format="%Y/%m/%d %H:%M"
)
png(paste0(basedir,"img\\plot_windSp.png"),width=1000)
ggplot(DF2, aes(x=datetime, y=WindSpd.Te)) +
geom_point(aes(x=datetime, y=WindSpd.Te)) +
geom_line() +
xlab("")
dev.off()
## data directory (external directory for input and output)
basedir = "D:\\Experiments\\R\\"
## load data
DF1 = read.csv( paste0(basedir, "data\\allcheckins.csv"),
header=TRUE, sep=",", nrows=200000,
colClasses = c("numeric","numeric","numeric","character",
"numeric","character","character","character")
)
## add additional columns
DF1$datetime = strptime( strtrim(DF1$time_str,19),
format="%Y-%m-%d %H:%M:%S"
)
DF1$hour=format(DF1$datetime,"%H")
DF1$yearday=format(DF1$datetime,"%j")
DF1$weekday = ifelse(
(format(DF1$datetime,"%w")>5 | format(DF1$datetime,"%w")<1),
"Weekend", "Workday")
########### statistics for the dataset ###########
## phase 1: category and date combined, statistics by hour
## i.e.: mean checkin counts in each hour
## prepare them in a data frame for plotting
DF_hour = gen_df_by_hour(DF1)
## plot
png(paste0(basedir,"img\\plot_mean_hour.png"),width=1000)
ggplot(DF_hour, aes(x=hour,y=prop)) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(labels  = percent)
dev.off()
## phase 2: category combined, statistics by hour and weekend/workday
## i.e.: mean checkin counts in each hour for weekend and for workdays
## prepare them in a data frame for plotting
L_weekday = split(DF1, DF1$weekday)
DF_hour_weekday = data.frame()
temp = lapply(L_weekday, function(i){
df = gen_df_by_hour(i, weekday=i[1,"weekday"])
DF_hour_weekday <<- rbind(DF_hour_weekday, df)
})
rm(temp,L_weekday)
## plot
png(paste0(basedir,"img\\plot_mean_hour_weekday.png"),width=1000)
ggplot(DF_hour_weekday, aes(x=hour,y=prop, fill=weekday)) +
geom_bar(stat="identity") +
xlab("") +
facet_grid(~weekday) +
# coord_cartesian(ylim = c(0,0.1)) +
scale_y_continuous(labels  = percent)
dev.off()
## phase 3: statistics by hour and category
## i.e.: mean checkin counts in each hour for each category
## prepare them in a data frame for plotting
L_category = split(DF1, DF1$cate_l1)
DF_hour_category = data.frame()
temp = lapply(L_category, function(i){
df = gen_df_by_hour(i, category = i[1,"cate_l1"])
DF_hour_category <<- rbind(DF_hour_category,df)
})
rm(temp)
## plot
png(paste0(basedir,"img\\plot_mean_hour_category.png"),width = 1000)
ggplot(DF_hour_category, aes(x=hour,y=prop)) +
geom_bar(stat="identity") +
xlab("") +
facet_wrap(~cate_l1, ncol=5, nrow=2) +
coord_cartesian(ylim = c(0,0.13)) +
scale_y_continuous(labels  = percent)
dev.off()
## phase 4: category combined, statistics by date and hour
## i.e.: checkin counts in each hour for each day
## prepare them in a data frame for plotting
DF_date_hour = gen_df_by_date_hour(DF1)
## plot
png(paste0(basedir,"img\\plot_date_hour.png"),width=1000)
ggplot(DF_date_hour, aes(x=datetime, y=prop)) +
geom_point(aes(x=datetime, y=prop, color=weekday)) +
geom_line() +
xlab("") +
scale_y_continuous(labels  = percent)
dev.off()
## phase 5: statistics by date and hour and by category
## i.e.: checkin counts in each hour for each day
## prepare them in a data frame for plotting
DF_date_hour_category = data.frame()
temp = lapply(L_category, function(i){
df = gen_df_by_date_hour(i, category = i[1,"cate_l1"])
DF_date_hour_category <<- rbind(DF_date_hour_category,df)
})
rm(temp)
## plot
png(paste0(basedir,"img\\plot_date_hour_category.png"),width=1000)
ggplot(DF_date_hour_category, aes(x=datetime, y=prop)) +
geom_point(aes(x=datetime, y=prop, color=weekday)) +
geom_line() +
facet_wrap(~cate_l1, ncol=2, nrow=5) +
coord_cartesian(ylim = c(0,0.2)) +
xlab("") +
scale_y_continuous(labels  = percent)
# ggplot(DF1, aes(x=datetime, colour=isweekend, fill=isweekend)) +
#     geom_histogram(binwidth=1800) +
#     facet_grid(cate_l1~.)
dev.off()
## differences (between DF_hour_category and DF_date_hour_category)
L_mean = split(DF_hour_category, DF_hour_category$cate_l1)
L_date = split(DF_date_hour_category, DF_date_hour_category$cate_l1)
DF_diff = data.frame()
temp = lapply(seq_along(L_mean), function(i){
mean_cate_i = L_mean[[i]]
date_cate_i = L_date[[i]]
for (j in 1:nrow(date_cate_i)){
idx= which(mean_cate_i$hour == date_cate_i[j,"hour"])
diff = date_cate_i[j,"prop"] - mean_cate_i[idx, "prop"]
date_cate_i[j,"difference"] = diff
}
DF_diff <<- rbind(DF_diff, date_cate_i)
})
rm(temp)
## plot
png(paste0(basedir,"img\\plot_diff.png"),width=2000)
ggplot(DF_diff, aes(x=datetime, y=difference)) +
geom_point(aes(x=datetime, y=difference, color=weekday)) +
geom_line() +
facet_wrap(~cate_l1, ncol=2, nrow=5) +
coord_cartesian(ylim = c(0,0.2)) +
xlab("") +
scale_y_continuous(labels  = percent)
dev.off()
png(paste0(basedir,"img\\plot_diff.png"),width=2000)
ggplot(DF_diff, aes(x=datetime, y=difference)) +
geom_point(aes(x=datetime, y=difference, color=weekday)) +
geom_line() +
facet_wrap(~cate_l1, ncol=2, nrow=5) +
#coord_cartesian(ylim = c(0,0.2)) +
xlab("") +
scale_y_continuous(labels  = percent)
dev.off()
png(paste0(basedir,"img\\plot_diff.png"),width=2000)
ggplot(DF_diff, aes(x=datetime, y=difference)) +
geom_point(aes(x=datetime, y=difference, color=weekday)) +
geom_line() +
facet_wrap(~cate_l1, ncol=2, nrow=5) +
coord_cartesian(ylim = c(,0.3)) +
xlab("") +
scale_y_continuous(labels  = percent)
dev.off()
png(paste0(basedir,"img\\plot_diff.png"),width=2000)
ggplot(DF_diff, aes(x=datetime, y=difference)) +
geom_point(aes(x=datetime, y=difference, color=weekday)) +
geom_line() +
facet_wrap(~cate_l1, ncol=2, nrow=5) +
coord_cartesian(ylim = c(-0.1,0.3)) +
xlab("") +
scale_y_continuous(labels  = percent)
dev.off()
png(paste0(basedir,"img\\plot_diff.png"),width=1000)
ggplot(DF_diff, aes(x=datetime, y=difference)) +
geom_point(aes(x=datetime, y=difference, color=weekday)) +
geom_line() +
facet_wrap(~cate_l1, ncol=2, nrow=5) +
coord_cartesian(ylim = c(-0.1,0.3)) +
xlab("") +
scale_y_continuous(labels  = percent)
dev.off()
png(paste0(basedir,"img\\plot_diff.png"),width=1000)
ggplot(DF_diff, aes(x=datetime, y=difference)) +
geom_point(aes(x=datetime, y=difference, color=weekday)) +
#geom_line() +
facet_wrap(~cate_l1, ncol=2, nrow=5) +
coord_cartesian(ylim = c(-0.1,0.3)) +
xlab("") +
scale_y_continuous(labels  = percent)
dev.off()
install.packages("TSA")
View(DF_date_hour)
library(TSA)
spec.pgram(DF_date_hour$prop)
y=spec.pgram(DF_date_hour$prop)
spec=y$spec
spec=y[["spec"]]
?order
order(c(1,6,5,1,3,4))
spec_ord=order(spec)
freq=y[["freq"]]
freq_sorted=freq[spec_ord]
time_sorted = 1/freq_sorted
spec
tail(time_sorted)
0:24
?table
globalfre = spec.pgram(DF_date_hour$prop)
png(paste0(basedir,"img\\plot_freq.png"),width=1000)
globalfre = spec.pgram(DF_date_hour$prop)
dev.off()
?spec.pgram
t=c(1:200)
?sin
x=sin(t*t)
spec.pgram(x)
x=sin(t)
spec.pgram(x)
x=sin(t*t)
spec.pgram(x)
x=sin(t)
spec.pgram(x)
